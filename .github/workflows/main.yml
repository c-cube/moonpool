name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run:
    name: build  # build+test on various versions of OCaml, on linux
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        os:
            - ubuntu-latest
        ocaml-compiler:
            - '4.08'
            - '4.14'
            - '5.2'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          allow-prerelease-opam: true

      - run: opam pin picos --dev -y -n && opam install picos
      - run: opam install -t moonpool moonpool-lwt --deps-only
        if: matrix.ocaml-compiler == '5.2'
      - run: opam install -t moonpool --deps-only
        if: matrix.ocaml-compiler != '5.2'
      - run: opam exec -- dune build @install

      # install some depopts
      - run: opam install thread-local-storage trace
        if: matrix.ocaml-compiler == '5.2'

      - run: opam exec -- dune build --profile=release --force @install @runtest

  compat:
    name: build-compat # compat with other OSes
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        os:
            - macos-latest
              #- windows-latest
        ocaml-compiler:
            - '5.2'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          allow-prerelease-opam: true

      - run: opam install -t moonpool moonpool-lwt --deps-only
      - run: opam exec -- dune build @install
      # install some depopts
      - run: opam install thread-local-storage trace domain-local-await
      - run: opam exec -- dune build --profile=release --force @install @runtest

  format:
    name: format
    strategy:
      matrix:
        ocaml-compiler:
            - '5.2'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@main
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          allow-prerelease-opam: true

      - run: opam install ocamlformat.0.26.2
      - run: opam exec -- make format-check

